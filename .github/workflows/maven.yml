name: Maven CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Install external jars (if any)
        if: ${{ hashFiles('libs/*.jar') != '' }}
        run: |
          mvn -q install:install-file -Dfile=libs/gpsUtil.jar       -DgroupId=gpsUtil       -DartifactId=gpsUtil       -Dversion=1.0.0 -Dpackaging=jar
          mvn -q install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
          mvn -q install:install-file -Dfile=libs/TripPricer.jar    -DgroupId=tripPricer    -DartifactId=tripPricer    -Dversion=1.0.0 -Dpackaging=jar

      - name: Build & Test (timed)
        run: |
          start=$(date +%s)
          # Profil 'ci-fast' : exclut TestPerformance via Surefire
          mvn -B -ntp -Pci-fast clean verify
          end=$(date +%s)
          echo "### Build & Test" >> $GITHUB_STEP_SUMMARY
          echo "- Duration: $((end-start))s" >> $GITHUB_STEP_SUMMARY

      - name: Unit test timings (Surefire)
        if: always()
        run: |
          echo "## Unit tests (Surefire)" >> $GITHUB_STEP_SUMMARY
          found=false
          while IFS= read -r -d '' f; do
            found=true
            cls=$(basename "$f" .xml | sed 's/^TEST-//')
            dur=$(grep -oP '(?<=<testsuite[^>]* time=\")[0-9.]+' "$f" | head -n1)
            echo "- ${cls}: ${dur}s" >> $GITHUB_STEP_SUMMARY
          done < <(find . -path "*/target/surefire-reports/TEST-*.xml" -print0)
          if [ "$found" = false ]; then
            echo "_No surefire reports found._" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload artifacts (jar + test reports)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tourguide-artifacts
          path: |
            target/*.jar
            **/target/surefire-reports/**

  perf:
    name: Performance Tests
    # Lance la matrice si run manuel OU si le message du commit contient [perf]
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[perf]') }}
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        userCount: [100, 1000, 10000, 100000]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Install external jars (if any)
        if: ${{ hashFiles('libs/*.jar') != '' }}
        run: |
          mvn -q install:install-file -Dfile=libs/gpsUtil.jar       -DgroupId=gpsUtil       -DartifactId=gpsUtil       -Dversion=1.0.0 -Dpackaging=jar
          mvn -q install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
          mvn -q install:install-file -Dfile=libs/TripPricer.jar    -DgroupId=tripPricer    -DartifactId=tripPricer    -Dversion=1.0.0 -Dpackaging=jar

      - name: Run TestPerformance (userCount=${{ matrix.userCount }})
        run: |
          set -o pipefail
          mvn -B -ntp -Dtest=TestPerformance -DuserCount=${{ matrix.userCount }} test | tee perf-${{ matrix.userCount }}.log

      - name: Publish perf timings to summary
        if: always()
        run: |
          echo "## Performance â€“ ${{ matrix.userCount }} users" >> $GITHUB_STEP_SUMMARY
          if grep -E 'highVolumeTrackLocation|highVolumeGetRewards' perf-${{ matrix.userCount }}.log >> $GITHUB_STEP_SUMMARY; then
            true
          else
            echo "_No timing lines found in output._" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload perf logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: perf-logs
          path: perf-*.log
